<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.music.mapper.MusicuploadMapper" >
  <resultMap id="BaseResultMap" type="cn.music.po.Musicupload" >
    <id column="uploadId" property="uploadid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="uploadTime" property="uploadtime" jdbcType="TIMESTAMP" />
    <result column="musicId" property="musicid" jdbcType="INTEGER" />
    <result column="checkStatusid" property="checkstatusid" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    uploadId, userId, uploadTime, musicId, checkStatusid, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from musicupload
    where uploadId = #{uploadid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from musicupload
    where uploadId = #{uploadid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.music.po.Musicupload" >
    insert into musicupload (uploadId, userId, uploadTime, 
      musicId, checkStatusid, updateTime
      )
    values (#{uploadid,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{uploadtime,jdbcType=TIMESTAMP}, 
      #{musicid,jdbcType=INTEGER}, #{checkstatusid,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.Musicupload" >
    insert into musicupload
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uploadid != null" >
        uploadId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="uploadtime != null" >
        uploadTime,
      </if>
      <if test="musicid != null" >
        musicId,
      </if>
      <if test="checkstatusid != null" >
        checkStatusid,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uploadid != null" >
        #{uploadid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="musicid != null" >
        #{musicid,jdbcType=INTEGER},
      </if>
      <if test="checkstatusid != null" >
        #{checkstatusid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.Musicupload" >
    update musicupload
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        uploadTime = #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="musicid != null" >
        musicId = #{musicid,jdbcType=INTEGER},
      </if>
      <if test="checkstatusid != null" >
        checkStatusid = #{checkstatusid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uploadId = #{uploadid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Musicupload" >
    update musicupload
    set userId = #{userid,jdbcType=VARCHAR},
      uploadTime = #{uploadtime,jdbcType=TIMESTAMP},
      musicId = #{musicid,jdbcType=INTEGER},
      checkStatusid = #{checkstatusid,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where uploadId = #{uploadid,jdbcType=INTEGER}
  </update>
</mapper>