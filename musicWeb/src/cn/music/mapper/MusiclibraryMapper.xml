<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.music.mapper.MusiclibraryMapper">
  <resultMap id="BaseResultMap" type="cn.music.po.Musiclibrary">
    <id column="musicId" jdbcType="INTEGER" property="musicid" />
    <id column="categoryId" jdbcType="INTEGER" property="categoryid" />
    <result column="musicName" jdbcType="VARCHAR" property="musicname" />
    <result column="categorydetail_id" jdbcType="INTEGER" property="categorydetailId" />
    <result column="styleid" jdbcType="INTEGER" property="styleid" />
    <result column="languageid" jdbcType="INTEGER" property="languageid" />
    <result column="downloadPermissionsid" jdbcType="INTEGER" property="downloadpermissionsid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.music.po.Musiclibrary">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Base_Column_List">
    musicId, categoryId, musicName, categorydetail_id, styleid, languageid, downloadPermissionsid
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByPrimaryKey" parameterType="cn.music.po.MusiclibraryKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from musiclibrary
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.music.po.MusiclibraryKey">
    delete from musiclibrary
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.music.po.Musiclibrary">
    insert into musiclibrary (musicId, categoryId, musicName, 
      categorydetail_id, styleid, languageid, 
      downloadPermissionsid, lyric)
    values (#{musicid,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}, #{musicname,jdbcType=VARCHAR}, 
      #{categorydetailId,jdbcType=INTEGER}, #{styleid,jdbcType=INTEGER}, #{languageid,jdbcType=INTEGER}, 
      #{downloadpermissionsid,jdbcType=INTEGER}, #{lyric,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.Musiclibrary">
    insert into musiclibrary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="musicid != null">
        musicId,
      </if>
      <if test="categoryid != null">
        categoryId,
      </if>
      <if test="musicname != null">
        musicName,
      </if>
      <if test="categorydetailId != null">
        categorydetail_id,
      </if>
      <if test="styleid != null">
        styleid,
      </if>
      <if test="languageid != null">
        languageid,
      </if>
      <if test="downloadpermissionsid != null">
        downloadPermissionsid,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="musicid != null">
        #{musicid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="musicname != null">
        #{musicname,jdbcType=VARCHAR},
      </if>
      <if test="categorydetailId != null">
        #{categorydetailId,jdbcType=INTEGER},
      </if>
      <if test="styleid != null">
        #{styleid,jdbcType=INTEGER},
      </if>
      <if test="languageid != null">
        #{languageid,jdbcType=INTEGER},
      </if>
      <if test="downloadpermissionsid != null">
        #{downloadpermissionsid,jdbcType=INTEGER},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.Musiclibrary">
    update musiclibrary
    <set>
      <if test="musicname != null">
        musicName = #{musicname,jdbcType=VARCHAR},
      </if>
      <if test="categorydetailId != null">
        categorydetail_id = #{categorydetailId,jdbcType=INTEGER},
      </if>
      <if test="styleid != null">
        styleid = #{styleid,jdbcType=INTEGER},
      </if>
      <if test="languageid != null">
        languageid = #{languageid,jdbcType=INTEGER},
      </if>
      <if test="downloadpermissionsid != null">
        downloadPermissionsid = #{downloadpermissionsid,jdbcType=INTEGER},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.Musiclibrary">
    update musiclibrary
    set musicName = #{musicname,jdbcType=VARCHAR},
      categorydetail_id = #{categorydetailId,jdbcType=INTEGER},
      styleid = #{styleid,jdbcType=INTEGER},
      languageid = #{languageid,jdbcType=INTEGER},
      downloadPermissionsid = #{downloadpermissionsid,jdbcType=INTEGER},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Musiclibrary">
    update musiclibrary
    set musicName = #{musicname,jdbcType=VARCHAR},
      categorydetail_id = #{categorydetailId,jdbcType=INTEGER},
      styleid = #{styleid,jdbcType=INTEGER},
      languageid = #{languageid,jdbcType=INTEGER},
      downloadPermissionsid = #{downloadpermissionsid,jdbcType=INTEGER}
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cn.music.po.Musiclibrary">
    <id column="musicId" jdbcType="INTEGER" property="musicid" />
    <id column="categoryId" jdbcType="INTEGER" property="categoryid" />
    <result column="musicName" jdbcType="VARCHAR" property="musicname" />
    <result column="categorydetail_id" jdbcType="INTEGER" property="categorydetailId" />
    <result column="styleid" jdbcType="INTEGER" property="styleid" />
    <result column="languageid" jdbcType="INTEGER" property="languageid" />
    <result column="downloadPermissionsid" jdbcType="INTEGER" property="downloadpermissionsid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.music.po.Musiclibrary">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    musicId, categoryId, musicName, categorydetail_id, styleid, languageid, downloadPermissionsid
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.music.po.MusiclibraryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from musiclibrary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.music.po.MusiclibraryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from musiclibrary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.music.po.MusiclibraryKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from musiclibrary
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.music.po.MusiclibraryKey">
    delete from musiclibrary
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.music.po.MusiclibraryExample">
    delete from musiclibrary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.music.po.Musiclibrary">
    insert into musiclibrary (musicId, categoryId, musicName, 
      categorydetail_id, styleid, languageid, 
      downloadPermissionsid, lyric)
    values (#{musicid,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}, #{musicname,jdbcType=VARCHAR}, 
      #{categorydetailId,jdbcType=INTEGER}, #{styleid,jdbcType=INTEGER}, #{languageid,jdbcType=INTEGER}, 
      #{downloadpermissionsid,jdbcType=INTEGER}, #{lyric,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.Musiclibrary">
    insert into musiclibrary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="musicid != null">
        musicId,
      </if>
      <if test="categoryid != null">
        categoryId,
      </if>
      <if test="musicname != null">
        musicName,
      </if>
      <if test="categorydetailId != null">
        categorydetail_id,
      </if>
      <if test="styleid != null">
        styleid,
      </if>
      <if test="languageid != null">
        languageid,
      </if>
      <if test="downloadpermissionsid != null">
        downloadPermissionsid,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="musicid != null">
        #{musicid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="musicname != null">
        #{musicname,jdbcType=VARCHAR},
      </if>
      <if test="categorydetailId != null">
        #{categorydetailId,jdbcType=INTEGER},
      </if>
      <if test="styleid != null">
        #{styleid,jdbcType=INTEGER},
      </if>
      <if test="languageid != null">
        #{languageid,jdbcType=INTEGER},
      </if>
      <if test="downloadpermissionsid != null">
        #{downloadpermissionsid,jdbcType=INTEGER},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.music.po.MusiclibraryExample" resultType="java.lang.Integer">
    select count(*) from musiclibrary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update musiclibrary
    <set>
      <if test="record.musicid != null">
        musicId = #{record.musicid,jdbcType=INTEGER},
      </if>
      <if test="record.categoryid != null">
        categoryId = #{record.categoryid,jdbcType=INTEGER},
      </if>
      <if test="record.musicname != null">
        musicName = #{record.musicname,jdbcType=VARCHAR},
      </if>
      <if test="record.categorydetailId != null">
        categorydetail_id = #{record.categorydetailId,jdbcType=INTEGER},
      </if>
      <if test="record.styleid != null">
        styleid = #{record.styleid,jdbcType=INTEGER},
      </if>
      <if test="record.languageid != null">
        languageid = #{record.languageid,jdbcType=INTEGER},
      </if>
      <if test="record.downloadpermissionsid != null">
        downloadPermissionsid = #{record.downloadpermissionsid,jdbcType=INTEGER},
      </if>
      <if test="record.lyric != null">
        lyric = #{record.lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update musiclibrary
    set musicId = #{record.musicid,jdbcType=INTEGER},
      categoryId = #{record.categoryid,jdbcType=INTEGER},
      musicName = #{record.musicname,jdbcType=VARCHAR},
      categorydetail_id = #{record.categorydetailId,jdbcType=INTEGER},
      styleid = #{record.styleid,jdbcType=INTEGER},
      languageid = #{record.languageid,jdbcType=INTEGER},
      downloadPermissionsid = #{record.downloadpermissionsid,jdbcType=INTEGER},
      lyric = #{record.lyric,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update musiclibrary
    set musicId = #{record.musicid,jdbcType=INTEGER},
      categoryId = #{record.categoryid,jdbcType=INTEGER},
      musicName = #{record.musicname,jdbcType=VARCHAR},
      categorydetail_id = #{record.categorydetailId,jdbcType=INTEGER},
      styleid = #{record.styleid,jdbcType=INTEGER},
      languageid = #{record.languageid,jdbcType=INTEGER},
      downloadPermissionsid = #{record.downloadpermissionsid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.Musiclibrary">
    update musiclibrary
    <set>
      <if test="musicname != null">
        musicName = #{musicname,jdbcType=VARCHAR},
      </if>
      <if test="categorydetailId != null">
        categorydetail_id = #{categorydetailId,jdbcType=INTEGER},
      </if>
      <if test="styleid != null">
        styleid = #{styleid,jdbcType=INTEGER},
      </if>
      <if test="languageid != null">
        languageid = #{languageid,jdbcType=INTEGER},
      </if>
      <if test="downloadpermissionsid != null">
        downloadPermissionsid = #{downloadpermissionsid,jdbcType=INTEGER},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.Musiclibrary">
    update musiclibrary
    set musicName = #{musicname,jdbcType=VARCHAR},
      categorydetail_id = #{categorydetailId,jdbcType=INTEGER},
      styleid = #{styleid,jdbcType=INTEGER},
      languageid = #{languageid,jdbcType=INTEGER},
      downloadPermissionsid = #{downloadpermissionsid,jdbcType=INTEGER},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Musiclibrary">
    update musiclibrary
    set musicName = #{musicname,jdbcType=VARCHAR},
      categorydetail_id = #{categorydetailId,jdbcType=INTEGER},
      styleid = #{styleid,jdbcType=INTEGER},
      languageid = #{languageid,jdbcType=INTEGER},
      downloadPermissionsid = #{downloadpermissionsid,jdbcType=INTEGER}
    where musicId = #{musicid,jdbcType=INTEGER}
      and categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
</mapper>