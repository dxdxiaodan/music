<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.music.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="cn.music.po.Comment" >
    <id column="commentId" property="commentid" jdbcType="INTEGER" />
    <result column="musicId" property="musicid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="checkStatusid" property="checkstatusid" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.music.po.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    commentId, musicId, userId, time, checkStatusid, updateTime
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.music.po.Comment" >
    insert into comment (commentId, musicId, userId, 
      time, checkStatusid, updateTime, 
      content)
    values (#{commentid,jdbcType=INTEGER}, #{musicid,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{checkstatusid,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentid != null" >
        commentId,
      </if>
      <if test="musicid != null" >
        musicId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="checkstatusid != null" >
        checkStatusid,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentid != null" >
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="musicid != null" >
        #{musicid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="checkstatusid != null" >
        #{checkstatusid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.Comment" >
    update comment
    <set >
      <if test="musicid != null" >
        musicId = #{musicid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="checkstatusid != null" >
        checkStatusid = #{checkstatusid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.Comment" >
    update comment
    set musicId = #{musicid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      checkStatusid = #{checkstatusid,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Comment" >
    update comment
    set musicId = #{musicid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      checkStatusid = #{checkstatusid,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>