<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.music.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="cn.music.po.Admin">
    <id column="staffId" jdbcType="VARCHAR" property="staffid" />
    <result column="staffName" jdbcType="VARCHAR" property="staffname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="registerTime" jdbcType="TIMESTAMP" property="registertime" />
    <result column="amountStatusid" jdbcType="INTEGER" property="amountstatusid" />
    <result column="telephone" jdbcType="INTEGER" property="telephone" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.music.po.AdminWithBLOBs">
    <result column="address" jdbcType="LONGVARCHAR" property="address" />
    <result column="headPortrait" jdbcType="LONGVARCHAR" property="headportrait" />
  </resultMap>
  <sql id="Base_Column_List">
    staffId, staffName, password, sex, birthday, registerTime, amountStatusid, telephone
  </sql>
  <sql id="Blob_Column_List">
    address, headPortrait
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from admin
    where staffId = #{staffid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from admin
    where staffId = #{staffid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.music.po.AdminWithBLOBs">
    insert into admin (staffId, staffName, password, 
      sex, birthday, registerTime, 
      amountStatusid, telephone, address, 
      headPortrait)
    values (#{staffid,jdbcType=VARCHAR}, #{staffname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, #{registertime,jdbcType=TIMESTAMP}, 
      #{amountstatusid,jdbcType=INTEGER}, #{telephone,jdbcType=INTEGER}, #{address,jdbcType=LONGVARCHAR}, 
      #{headportrait,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.AdminWithBLOBs">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        staffId,
      </if>
      <if test="staffname != null">
        staffName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="registertime != null">
        registerTime,
      </if>
      <if test="amountstatusid != null">
        amountStatusid,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="headportrait != null">
        headPortrait,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        #{staffid,jdbcType=VARCHAR},
      </if>
      <if test="staffname != null">
        #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountstatusid != null">
        #{amountstatusid,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="headportrait != null">
        #{headportrait,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.AdminWithBLOBs">
    update admin
    <set>
      <if test="staffname != null">
        staffName = #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="registertime != null">
        registerTime = #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountstatusid != null">
        amountStatusid = #{amountstatusid,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="headportrait != null">
        headPortrait = #{headportrait,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where staffId = #{staffid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.AdminWithBLOBs">
    update admin
    set staffName = #{staffname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      amountStatusid = #{amountstatusid,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=INTEGER},
      address = #{address,jdbcType=LONGVARCHAR},
      headPortrait = #{headportrait,jdbcType=LONGVARCHAR}
    where staffId = #{staffid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Admin">
    update admin
    set staffName = #{staffname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      amountStatusid = #{amountstatusid,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=INTEGER}
    where staffId = #{staffid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.music.po.Admin">
    <id column="staffId" jdbcType="VARCHAR" property="staffid" />
    <result column="staffName" jdbcType="VARCHAR" property="staffname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="registerTime" jdbcType="TIMESTAMP" property="registertime" />
    <result column="amountStatusid" jdbcType="INTEGER" property="amountstatusid" />
    <result column="telephone" jdbcType="INTEGER" property="telephone" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.music.po.AdminWithBLOBs">
    <result column="address" jdbcType="LONGVARCHAR" property="address" />
    <result column="headPortrait" jdbcType="LONGVARCHAR" property="headportrait" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    staffId, staffName, password, sex, birthday, registerTime, amountStatusid, telephone
  </sql>
  <sql id="Blob_Column_List">
    address, headPortrait
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.music.po.AdminExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.music.po.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from admin
    where staffId = #{staffid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from admin
    where staffId = #{staffid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.music.po.AdminExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.music.po.AdminWithBLOBs">
    insert into admin (staffId, staffName, password, 
      sex, birthday, registerTime, 
      amountStatusid, telephone, address, 
      headPortrait)
    values (#{staffid,jdbcType=VARCHAR}, #{staffname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, #{registertime,jdbcType=TIMESTAMP}, 
      #{amountstatusid,jdbcType=INTEGER}, #{telephone,jdbcType=INTEGER}, #{address,jdbcType=LONGVARCHAR}, 
      #{headportrait,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.AdminWithBLOBs">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        staffId,
      </if>
      <if test="staffname != null">
        staffName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="registertime != null">
        registerTime,
      </if>
      <if test="amountstatusid != null">
        amountStatusid,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="headportrait != null">
        headPortrait,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        #{staffid,jdbcType=VARCHAR},
      </if>
      <if test="staffname != null">
        #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountstatusid != null">
        #{amountstatusid,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="headportrait != null">
        #{headportrait,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.music.po.AdminExample" resultType="java.lang.Integer">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.staffid != null">
        staffId = #{record.staffid,jdbcType=VARCHAR},
      </if>
      <if test="record.staffname != null">
        staffName = #{record.staffname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.registertime != null">
        registerTime = #{record.registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amountstatusid != null">
        amountStatusid = #{record.amountstatusid,jdbcType=INTEGER},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.headportrait != null">
        headPortrait = #{record.headportrait,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update admin
    set staffId = #{record.staffid,jdbcType=VARCHAR},
      staffName = #{record.staffname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      registerTime = #{record.registertime,jdbcType=TIMESTAMP},
      amountStatusid = #{record.amountstatusid,jdbcType=INTEGER},
      telephone = #{record.telephone,jdbcType=INTEGER},
      address = #{record.address,jdbcType=LONGVARCHAR},
      headPortrait = #{record.headportrait,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set staffId = #{record.staffid,jdbcType=VARCHAR},
      staffName = #{record.staffname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      registerTime = #{record.registertime,jdbcType=TIMESTAMP},
      amountStatusid = #{record.amountstatusid,jdbcType=INTEGER},
      telephone = #{record.telephone,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.AdminWithBLOBs">
    update admin
    <set>
      <if test="staffname != null">
        staffName = #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="registertime != null">
        registerTime = #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="amountstatusid != null">
        amountStatusid = #{amountstatusid,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="headportrait != null">
        headPortrait = #{headportrait,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where staffId = #{staffid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.AdminWithBLOBs">
    update admin
    set staffName = #{staffname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      amountStatusid = #{amountstatusid,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=INTEGER},
      address = #{address,jdbcType=LONGVARCHAR},
      headPortrait = #{headportrait,jdbcType=LONGVARCHAR}
    where staffId = #{staffid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.Admin">
    update admin
    set staffName = #{staffname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      amountStatusid = #{amountstatusid,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=INTEGER}
    where staffId = #{staffid,jdbcType=VARCHAR}
  </update>
</mapper>