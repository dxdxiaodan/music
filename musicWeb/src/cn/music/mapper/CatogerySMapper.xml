<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.music.mapper.CatogerySMapper">
  <resultMap id="BaseResultMap" type="cn.music.po.CatogeryS">
    <id column="categoryId" jdbcType="INTEGER" property="categoryid" />
    <result column="singer" jdbcType="VARCHAR" property="singer" />
    <result column="writeLyric" jdbcType="VARCHAR" property="writelyric" />
    <result column="compose" jdbcType="VARCHAR" property="compose" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.music.po.CatogeryS">
    <result column="shareReason" jdbcType="LONGVARCHAR" property="sharereason" />
  </resultMap>
  <sql id="Base_Column_List">
    categoryId, singer, writeLyric, compose
  </sql>
  <sql id="Blob_Column_List">
    shareReason
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from catogery_s
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from catogery_s
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.music.po.CatogeryS">
    insert into catogery_s (categoryId, singer, writeLyric, 
      compose, shareReason)
    values (#{categoryid,jdbcType=INTEGER}, #{singer,jdbcType=VARCHAR}, #{writelyric,jdbcType=VARCHAR}, 
      #{compose,jdbcType=VARCHAR}, #{sharereason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.CatogeryS">
    insert into catogery_s
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryid != null">
        categoryId,
      </if>
      <if test="singer != null">
        singer,
      </if>
      <if test="writelyric != null">
        writeLyric,
      </if>
      <if test="compose != null">
        compose,
      </if>
      <if test="sharereason != null">
        shareReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="singer != null">
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="writelyric != null">
        #{writelyric,jdbcType=VARCHAR},
      </if>
      <if test="compose != null">
        #{compose,jdbcType=VARCHAR},
      </if>
      <if test="sharereason != null">
        #{sharereason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.CatogeryS">
    update catogery_s
    <set>
      <if test="singer != null">
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="writelyric != null">
        writeLyric = #{writelyric,jdbcType=VARCHAR},
      </if>
      <if test="compose != null">
        compose = #{compose,jdbcType=VARCHAR},
      </if>
      <if test="sharereason != null">
        shareReason = #{sharereason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.CatogeryS">
    update catogery_s
    set singer = #{singer,jdbcType=VARCHAR},
      writeLyric = #{writelyric,jdbcType=VARCHAR},
      compose = #{compose,jdbcType=VARCHAR},
      shareReason = #{sharereason,jdbcType=LONGVARCHAR}
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.CatogeryS">
    update catogery_s
    set singer = #{singer,jdbcType=VARCHAR},
      writeLyric = #{writelyric,jdbcType=VARCHAR},
      compose = #{compose,jdbcType=VARCHAR}
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cn.music.po.CatogeryS">
    <id column="categoryId" jdbcType="INTEGER" property="categoryid" />
    <result column="singer" jdbcType="VARCHAR" property="singer" />
    <result column="writeLyric" jdbcType="VARCHAR" property="writelyric" />
    <result column="compose" jdbcType="VARCHAR" property="compose" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.music.po.CatogeryS">
    <result column="shareReason" jdbcType="LONGVARCHAR" property="sharereason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    categoryId, singer, writeLyric, compose
  </sql>
  <sql id="Blob_Column_List">
    shareReason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.music.po.CatogerySExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from catogery_s
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.music.po.CatogerySExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from catogery_s
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from catogery_s
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from catogery_s
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.music.po.CatogerySExample">
    delete from catogery_s
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.music.po.CatogeryS">
    insert into catogery_s (categoryId, singer, writeLyric, 
      compose, shareReason)
    values (#{categoryid,jdbcType=INTEGER}, #{singer,jdbcType=VARCHAR}, #{writelyric,jdbcType=VARCHAR}, 
      #{compose,jdbcType=VARCHAR}, #{sharereason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.music.po.CatogeryS">
    insert into catogery_s
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryid != null">
        categoryId,
      </if>
      <if test="singer != null">
        singer,
      </if>
      <if test="writelyric != null">
        writeLyric,
      </if>
      <if test="compose != null">
        compose,
      </if>
      <if test="sharereason != null">
        shareReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryid != null">
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="singer != null">
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="writelyric != null">
        #{writelyric,jdbcType=VARCHAR},
      </if>
      <if test="compose != null">
        #{compose,jdbcType=VARCHAR},
      </if>
      <if test="sharereason != null">
        #{sharereason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.music.po.CatogerySExample" resultType="java.lang.Integer">
    select count(*) from catogery_s
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update catogery_s
    <set>
      <if test="record.categoryid != null">
        categoryId = #{record.categoryid,jdbcType=INTEGER},
      </if>
      <if test="record.singer != null">
        singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.writelyric != null">
        writeLyric = #{record.writelyric,jdbcType=VARCHAR},
      </if>
      <if test="record.compose != null">
        compose = #{record.compose,jdbcType=VARCHAR},
      </if>
      <if test="record.sharereason != null">
        shareReason = #{record.sharereason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update catogery_s
    set categoryId = #{record.categoryid,jdbcType=INTEGER},
      singer = #{record.singer,jdbcType=VARCHAR},
      writeLyric = #{record.writelyric,jdbcType=VARCHAR},
      compose = #{record.compose,jdbcType=VARCHAR},
      shareReason = #{record.sharereason,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update catogery_s
    set categoryId = #{record.categoryid,jdbcType=INTEGER},
      singer = #{record.singer,jdbcType=VARCHAR},
      writeLyric = #{record.writelyric,jdbcType=VARCHAR},
      compose = #{record.compose,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.music.po.CatogeryS">
    update catogery_s
    <set>
      <if test="singer != null">
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="writelyric != null">
        writeLyric = #{writelyric,jdbcType=VARCHAR},
      </if>
      <if test="compose != null">
        compose = #{compose,jdbcType=VARCHAR},
      </if>
      <if test="sharereason != null">
        shareReason = #{sharereason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.music.po.CatogeryS">
    update catogery_s
    set singer = #{singer,jdbcType=VARCHAR},
      writeLyric = #{writelyric,jdbcType=VARCHAR},
      compose = #{compose,jdbcType=VARCHAR},
      shareReason = #{sharereason,jdbcType=LONGVARCHAR}
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.music.po.CatogeryS">
    update catogery_s
    set singer = #{singer,jdbcType=VARCHAR},
      writeLyric = #{writelyric,jdbcType=VARCHAR},
      compose = #{compose,jdbcType=VARCHAR}
    where categoryId = #{categoryid,jdbcType=INTEGER}
  </update>
</mapper>